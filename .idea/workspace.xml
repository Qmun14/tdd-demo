<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e52233fe-c342-4bec-be12-f01ea3ed3f32" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://C:/Program Files/Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2WX6Y0JdTGqd2Q2SfNlWLvJKDWG" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.automatic.dependencies.download&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;git-widget-placeholder&quot;: &quot;automated-testing&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/golang/testing/tdd-demo&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;
  }
}</component>
  <component name="RunManager" selected="Go Test.TestGetUser in github.com/Qmun14/tdd-demo/golearn">
    <configuration name="TestCar_Speed_WithMock/just_called_3_times in github.com/Qmun14/tdd-demo/golearn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tdd-demo" />
      <working_directory value="$PROJECT_DIR$/golearn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Qmun14/tdd-demo/golearn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestCar_Speed_WithMock\E$/^\Qjust_called_3_times\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetUser in github.com/Qmun14/tdd-demo/golearn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tdd-demo" />
      <working_directory value="$PROJECT_DIR$/golearn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Qmun14/tdd-demo/golearn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetUser\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestGetUser/Can_Get_User in github.com/Qmun14/tdd-demo/golearn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tdd-demo" />
      <working_directory value="$PROJECT_DIR$/golearn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Qmun14/tdd-demo/golearn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestGetUser\E$/^\QCan_Get_User\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUploader_Upload in github.com/Qmun14/tdd-demo/golearn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tdd-demo" />
      <working_directory value="$PROJECT_DIR$/golearn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Qmun14/tdd-demo/golearn" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUploader_Upload\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test golearn" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="tdd-demo" />
      <working_directory value="$PROJECT_DIR$/golearn" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="DIRECTORY" />
      <package value="github.com/Qmun14/tdd-demo/golearn" />
      <directory value="$PROJECT_DIR$/golearn" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.TestGetUser in github.com/Qmun14/tdd-demo/golearn" />
        <item itemvalue="Go Test.TestGetUser/Can_Get_User in github.com/Qmun14/tdd-demo/golearn" />
        <item itemvalue="Go Test.go test golearn" />
        <item itemvalue="Go Test.TestUploader_Upload in github.com/Qmun14/tdd-demo/golearn" />
        <item itemvalue="Go Test.TestCar_Speed_WithMock/just_called_3_times in github.com/Qmun14/tdd-demo/golearn" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/tdd_demo$TestGetUser_in_github_com_Qmun14_tdd_demo_golearn.out" NAME="TestGetUser in github.com/Qmun14/tdd-demo/golearn Coverage Results" MODIFIED="1697083714681" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/tdd_demo$stack_test_go.out" NAME="stack_test.go Coverage Results" MODIFIED="1696868134387" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/tdd_demo$TestCar_Speed_in_github_com_Qmun14_tdd_demo_golearn.out" NAME="TestCar_Speed in github.com/Qmun14/tdd-demo/golearn Coverage Results" MODIFIED="1696946244905" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>